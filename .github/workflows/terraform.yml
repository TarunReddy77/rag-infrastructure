name: 'Terraform CI/CD'

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        env:
          TF_LOG: DEBUG
        run: terraform plan -no-color -var-file="config.tfvars"
        # Secrets are passed via GitHub secrets, config from the file

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–\n\n\`\`\`terraform\n${{ steps.plan.outputs.stdout }}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  terraform_apply:
    name: 'Terraform Apply'
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file="config.tfvars"
